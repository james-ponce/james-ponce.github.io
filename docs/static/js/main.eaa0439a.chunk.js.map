{"version":3,"sources":["components/Header.jsx","components/Table.jsx","components/SlideShow.jsx","components/projectList.jsx","components/Contact.jsx","components/Body.jsx","components/Footer.jsx","components/Reflection1.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Table","skills","map","skill","Object","keys","item","SlideShow","props","console","log","images","state","currentImage","size","changeImage","bind","changeImageManual","handleButtonClick","createButtons","x","setInterval","moveStep","this","setState","event","clearInterval","ButtonPress","target","id","buttons","i","push","onClick","style","backgroundColor","opacity","width","animationOut","animationIn","durationOut","durationIn","src","location","toString","alt","name","description","Component","ProjectList","projects","projectList","project","link","points","point","technologies","technology","Contact","visible","wrapperRef","React","createRef","partialVisibility","onChange","isVisible","ref","transform","Body","Footer","Reflection1","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eaa0439a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header(){\r\n    return(\r\n        <div className = 'bar'>\r\n            <div className = 'title'>\r\n                James Ponce\r\n            </div>\r\n            <ul className='information'>\r\n                <li>{'email: '}\r\n                    <a href='mailto:ponce800@hotmail.com'>ponce800@hotmail.com</a>\r\n                </li>\r\n                <li>{'phone: '}  \r\n                    <a href='tel: +15098314868'>509-831-4868</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport skills from '../json/skills.json'\r\n\r\nfunction Table(){\r\n    return(\r\n        <div className='Table'>\r\n            {skills.map(skill=>(\r\n                <div className = 'column'>\r\n                    <div className = 'columnTitle'>\r\n                        {Object.keys(skill)}\r\n                    </div>\r\n                    \r\n                    {skill[Object.keys(skill)].map(\r\n                        item=>(\r\n                            <li>{item}</li>\r\n                        )\r\n                    )}\r\n                    \r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import React, {Component} from 'react'\r\nimport {AnimateOnChange} from 'react-animation'\r\nimport 'react-animation/dist/keyframes.css'\r\nimport './SlideShow.scss'\r\n\r\nclass SlideShow extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        var x;\r\n\r\n        console.log(this.props.images)\r\n\r\n        this.state = {\r\n            currentImage: 0,\r\n            size: this.props.images.size,\r\n        }\r\n\r\n        this.changeImage = this.changeImage.bind(this)\r\n        this.changeImageManual = this.changeImageManual.bind(this)\r\n        this.handleButtonClick = this.handleButtonClick.bind(this)\r\n        this.createButtons = this.createButtons.bind(this)\r\n\r\n        if (this.props.images.size > 1 ) { this.x = setInterval(this.changeImage, 5000)}\r\n    }\r\n\r\n    changeImage(moveStep){\r\n\r\n        if(moveStep == null){\r\n            if(this.state.currentImage === this.props.images.size-1){\r\n                this.setState({currentImage: 0})\r\n            }\r\n            else{\r\n                this.setState({currentImage: this.state.currentImage+1})\r\n            }\r\n        }\r\n        else{\r\n            if (moveStep < 0){\r\n                if(this.state.currentImage == 0){\r\n                    this.setState({currentImage: this.props.images.size-1})\r\n                }\r\n                else{\r\n                    this.setState({currentImage: this.state.currentImage+moveStep})\r\n                }\r\n            }\r\n            else if (moveStep > 0){\r\n                if(this.state.currentImage === this.props.images.size-1){\r\n                    this.setState({currentImage: 0})\r\n                }\r\n                else{\r\n                    this.setState({currentImage: this.state.currentImage+moveStep})\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    changeImageManual(event){\r\n\r\n        if(this.x != null){\r\n            clearInterval(this.x)\r\n        }\r\n\r\n        if(event.ButtonPress === 'forward'){\r\n            this.changeImage(1)\r\n        }\r\n        else if(event.ButtonPress === 'backward'){\r\n            this.changeImage(-1);\r\n        }\r\n    }\r\n\r\n    handleButtonClick(event){\r\n        if(this.x != null){\r\n            clearInterval(this.x)\r\n        }\r\n\r\n        this.changeImage(event.target.id - this.state.currentImage)\r\n\r\n    }\r\n\r\n    createButtons(){\r\n        var buttons = []\r\n        for(var i = 0; i < this.props.images.size; i++){\r\n            buttons.push(<div className = 'button' id={i} onClick={this.handleButtonClick} style={\r\n                i == this.state.currentImage? {backgroundColor:'#00FDDC', opacity: 1}: null}></div>)\r\n        }\r\n        return buttons\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.state.size > 1 ? (\r\n                this.props.images != null ? (\r\n                    <div style = {{width: 'fit-content'}}>\r\n                        <div className = 'SlideShow'>\r\n                            <AnimateOnChange animationOut='slideAnimation-out 250ms linear forwards' animationIn = 'slideAnimation-in 250ms linear forwards' durationOut = {250} durationIn={500}>\r\n                                <img className = 'SlideShowImage' src = {this.props.images.location + '/' + this.state.currentImage.toString() + '.png'} alt = 'null'/>\r\n                            </AnimateOnChange>\r\n\r\n                            <div className = 'buttonBox'>\r\n                                {this.createButtons()}\r\n                            </div>\r\n\r\n                            <div name = 'backwards'className = 'back traverse' onClick = {()=>this.changeImageManual({ButtonPress: 'backward'})}></div>\r\n                            <div name = 'forwards' className = 'forward traverse' onClick = {()=>this.changeImageManual({ButtonPress: 'forward'})}></div>\r\n                        </div>\r\n                        <div className = 'description'>\r\n                            {this.props.images.description[this.state.currentImage+'.png']}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                \r\n                ): null \r\n            ):(\r\n                this.props.images != null ? (<img className = 'SlideShow' src = {this.props.images + '/' + this.state.currentImage.toString() + '.png'} alt = 'null'></img>): null \r\n            )\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default SlideShow","import React, {Component} from 'react'\r\n\r\nimport projectList from '../json/projects.json'\r\nimport SlideShow from './SlideShow'\r\n\r\nclass ProjectList extends Component{\r\n    \r\n\r\n    render(){\r\n        let projects = Object.keys(projectList.projects)\r\n        console.log(projects)\r\n        return(\r\n            projects.map((project)=>(\r\n                <div className = 'Project'>\r\n                    <div className = 'content'>\r\n                        {projectList.projects[project].link != null ?\r\n                        (<a href={projectList.projects[project].link}><h2>{project}</h2></a>): \r\n                        (<h2>{project}</h2>)}\r\n                        {projectList.projects[project].points != null ?(\r\n                            <ul>\r\n                                {projectList.projects[project].points.map(point=>(<li>{point}</li>))}\r\n                            </ul>\r\n                            ):(null)}\r\n                        <div className = 'contentBox'>\r\n                            <p>{projectList.projects[project].description}</p>\r\n\r\n                            <div className = 'oneLine Table'>\r\n                                <div className = 'column'>\r\n                                Technologies\r\n                                    <ul>\r\n                                    {\r\n                                        projectList.projects[project].technologies.map(technology=>\r\n                                            (\r\n                                                <li>{technology}</li>\r\n                                            ))\r\n                                    }\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    {projectList.projects[project].images != null? (\r\n                        <SlideShow images = {projectList.projects[project].images}/>\r\n                    ):\r\n                    (null)}\r\n                    \r\n\r\n                    \r\n                </div>\r\n            ))\r\n        )\r\n    };\r\n}\r\n\r\nexport default ProjectList","import React, {Component} from 'react'\r\nimport VisSensor from 'react-visibility-sensor'\r\n\r\nclass Contact extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            visible: false\r\n        }\r\n\r\n        this.wrapperRef = React.createRef()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <VisSensor partialVisibility onChange={(isVisible)=>{(this.state.visible || isVisible)?this.setState({visible:isVisible}):this.setState({visible:false})}}>\r\n                <div ref = {this.wrapperRef} className = {'Contact' + (this.state.visible? ' animated':' disabled')}>\r\n                    <div style = {this.state.visible ? {transform: 'translate(0px, 0px)'}: {}}className = 'textBox'>\r\n                        If you need a resume or unoffical transcript please contact me\r\n                    </div>\r\n                    \r\n                    <a href='mailto:ponce800@hotmail.com'><button style = {this.state.visible ? {transform: 'translate(0px, 0px)'}: {}}>Email</button></a>\r\n                    \r\n                    \r\n                </div>\r\n            </VisSensor>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\n\r\nimport Table from './Table'\r\nimport ProjectList from './projectList'\r\nimport Contact from './Contact'\r\n\r\nfunction Body(){\r\n    return(\r\n        <div className = 'Body'>\r\n            <div className = 'section'>\r\n                <h1>About me</h1>\r\n                <div className='info'>\r\n                    <p>\r\n                        Nothing is impossible. Four years ago terminal commands scared me, I didn't see a point in trying new languages, and I was extremely naive to what I could do. Today I strive to push myself in learning something new every time I work on a new project. Whether it's good or bad there's always something to take away. It's been four years of pushing myself in everything I do.\r\n                    </p>\r\n                    <ul>\r\n                        <li>pursuing</li>\r\n                        <ul>\r\n                            <li>Computer Science BS at Washington State University expected 2021</li>\r\n                            <li>Software Engineering BS at Washington State University expected 2021</li>\r\n                        </ul>\r\n                        <li>GPA: 3.6</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className='section'>\r\n                <h1>Skills</h1>\r\n                <Table/>\r\n            </div>\r\n            <div className = 'section'>\r\n                <h1>Projects</h1> \r\n                <ProjectList/>\r\n            </div>\r\n            <div className = 'section'>\r\n                <Contact/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;","import React from 'react'\r\n\r\nfunction Footer(){\r\n    return(\r\n        <div className = 'Footer bar'>\r\n            <p>Designed by James Ponce</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component} from 'react';\r\n\r\nexport class Reflection1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={'Reflection'}>\r\n                <h1>Reflection</h1>\r\n                <p className = {'info'}>\r\nI wanted to look at rural America and digital colonialism. As much of the United States has some form of internet it’s been much more lucrative for companies to begin investing in other countries where they can get more users to pay for their services even if the services aren’t great. Much of rural America uses DSL which has a maximum speed of 35 megabits per second. Companies make no effort to innovate and update the infrastructure of rural America.<br/>\r\nThis major lack of updated infrastructure leaves many lower income families struggling. People who are forced to use this slower tier internet are forced to be consumers rather than producers. In other words, they can’t use the internet to create content efficiently. Someone who had a 100 megabit per second connection could download stuff 10 times faster. This doesn’t seem like a big deal, but for a file that could exceed 10s of gigabytes this could be work days of time being saved.<br/>\r\nThis same concern has been brought to light with Facebook’s free basic internet program. It creates a group of people who are nothing but consumers.  The major problem with this is that many people today create some kind of living with an internet presence. During the massive pandemic many companies went online. Without a fast, stable, and high bandwidth connection many of these opportunities wouldn’t have existed. From reading the developers documentation for Facebook’s free basics program, this service is more of an isolated internet where developers need to submit a request for Facebook to let their users visit such websites. In a sense this program creates a fish bowl where people in the program can siphon money out of the system, but people in the system can’t create something to make money within it.<br/><br/>\r\n\r\nMy point with this poster was to show how digital colonialism and internet in rural America show greedy similarities. If people aren’t given the opportunity to escape poverty, then to make the attempt to leave is much riskier. These companies know it which is why they try to keep the users in a bowl. To show this I used a money fish where if the fish tries to escape the small enclosure. They are likely not to succeed. Instead they will suffer with lower speeds and be monitored. In the poster there lurks a camera which is meant to show how companies monitor our data to make the most money from consumers. \r\n\r\n                </p>\r\n                <img  className = {'image'} src={'/Images/sample.png'}/>\r\n                <h1>Works cited</h1>\r\n                \r\n                <a className = {'link'} href = 'https://www.reviews.org/internet-service/how-much-is-internet/'>How Much Is Internet?</a>\r\n                <a className = {'link'} href = 'https://broadbandnow.com/guides/dsl-vs-cable-vs-fiber#:~:text=DSL%20speed%3A%20DSL%20internet%20speeds%20are%20the%20slowest,can%20reach%20speeds%20400%20times%20faster%20than%20DSL.'>DSL vs Cable vs Fiber: Comparing Internet Options</a>\r\n                <a className = {'link'} href = 'https://developers.facebook.com/docs/internet-org/faq#what'>Free Basics FAQ</a>\r\n                <a className = {'link'} href = 'https://developers.facebook.com/docs/internet-org/platform-technical-guidelines'>Facebook Free Basics Technical Guidelines</a>\r\n                <a className = {'link'} href = 'https://developers.facebook.com/docs/internet-org/participation-guidelines'>Facebook Free Basics Participation Guidelines</a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Reflection1","import React from 'react';\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Footer from './components/Footer'\r\nimport Reflection1 from './components/Reflection1'\r\nimport './App.scss';\r\n\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path = '/'>\r\n          <Header></Header>\r\n          <Body></Body>\r\n          <Footer></Footer>\r\n          </Route>\r\n          <Route exact path = '/reflection/1'>\r\n            <Reflection1 />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}